1671113147
waR3U4bTeM%3A88159f6b1f832e17cec3f06285d46238-918bb392a13abf9c2f3879b1b64165da
s:19164:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:20:"Gestion valide frais";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:13:"PHP Version 7";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:9:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:8:"category";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:3:"PPE";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"package";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:3:"GSB";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:45:"phpDocumentor\Reflection\DocBlock\Tags\Author":4:{s:7:" * name";s:6:"author";s:57:" phpDocumentor\Reflection\DocBlock\Tags\Author authorName";s:13:"Réseau CERTA";s:58:" phpDocumentor\Reflection\DocBlock\Tags\Author authorEmail";s:23:"contact@reseaucerta.org";s:14:" * description";N;}i:3;O:45:"phpDocumentor\Reflection\DocBlock\Tags\Author":4:{s:7:" * name";s:6:"author";s:57:" phpDocumentor\Reflection\DocBlock\Tags\Author authorName";s:9:"José GIL";s:58:" phpDocumentor\Reflection\DocBlock\Tags\Author authorEmail";s:15:"jgil@ac-nice.fr";s:14:" * description";N;}i:4;O:45:"phpDocumentor\Reflection\DocBlock\Tags\Author":4:{s:7:" * name";s:6:"author";s:57:" phpDocumentor\Reflection\DocBlock\Tags\Author authorName";s:13:"Lambert Erwan";s:58:" phpDocumentor\Reflection\DocBlock\Tags\Author authorEmail";s:0:"";s:14:" * description";N;}i:5;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:9:"copyright";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:18:"2017 Réseau CERTA";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:6;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"license";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:13:"Réseau CERTA";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:7;O:49:"phpDocumentor\Reflection\DocBlock\Tags\InvalidTag":3:{s:55:" phpDocumentor\Reflection\DocBlock\Tags\InvalidTag name";s:7:"version";s:55:" phpDocumentor\Reflection\DocBlock\Tags\InvalidTag body";s:8:"GIT: <0>";s:60:" phpDocumentor\Reflection\DocBlock\Tags\InvalidTag throwable";N;}i:8;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Link":3:{s:7:" * name";s:4:"link";s:49:" phpDocumentor\Reflection\DocBlock\Tags\Link link";s:26:"http://www.reseaucerta.org";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:30:"Contexte « Laboratoire GSB »";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"918bb392a13abf9c2f3879b1b64165da";s:39:" phpDocumentor\Reflection\Php\File name";s:17:"c_valideFrais.php";s:39:" phpDocumentor\Reflection\Php\File path";s:29:"controleurs/c_valideFrais.php";s:41:" phpDocumentor\Reflection\Php\File source";s:9886:"<?php
/**
 * Gestion valide frais
 *
 * PHP Version 7
 *
 * @category  PPE
 * @package   GSB
 * @author    Réseau CERTA <contact@reseaucerta.org>
 * @author    José GIL <jgil@ac-nice.fr>
 * @author    Lambert Erwan <>
 * @copyright 2017 Réseau CERTA
 * @license   Réseau CERTA
 * @version   GIT: <0>
 * @link      http://www.reseaucerta.org Contexte « Laboratoire GSB »
 */
$action = filter_input(INPUT_GET, 'action', FILTER_SANITIZE_STRING);
$idVisiteur = filter_input(INPUT_POST, 'lstVisiteur', FILTER_SANITIZE_STRING);
$montants = 0;
$pdo->ClotureFiche();
switch ($action) {
    case 'selectionnerMois':
        if(empty($pdo->getLesMois())){
            ?></br><?php
            ajouterErreur("Aucune fiche de frais n'est à valider");
            include 'vues/v_erreurs.php';
            include 'vues/v_listeMoisComptable.php';
        }else{
            $lesMois = $pdo->getLesMois();
            $lesCles = array_keys($lesMois);
            $moisASelectionner = $lesCles[0];
            include 'vues/v_listeMoisComptable.php';
        }
        break;
    case 'selectionnerVisiteur':
        $leMois = filter_input(INPUT_POST, 'lstMois', FILTER_SANITIZE_STRING);
        $lesMois = $pdo->getLesMois();
        $moisASelectionner = $leMois;
        include 'vues/v_listeMoisComptable.php';
        $date = str_replace('/', '', filter_input(INPUT_POST, 'lstMois', FILTER_SANITIZE_STRING));
        trim($date);
        $_SESSION['date'] = $date;
        $lesVisiteurs = $pdo->getVisiteursFromMois($date);
        $selectedValue = $lesVisiteurs[0];
        if(empty($pdo->getVisiteursFromMois($date))){
            ?></br><?php
            ajouterErreur("Aucun visiteur n'a fais de fiche de frais ce mois-ci");
            include 'vues/v_erreurs.php';
        }else{
            include 'vues/v_selectVisiteur.php';
        }
        break;
    case 'validerFicheDeFrais' :
        $lesMois = $pdo->getLesMois();
        $moisASelectionner = $_SESSION['date'];
        include 'vues/v_listeMoisComptable.php';
        $leVisiteur = filter_input(INPUT_POST, 'lstVisiteur', FILTER_SANITIZE_STRING);
        $lesVisiteurs = $pdo->getVisiteursFromMois($_SESSION['date']);
        $selectedValue = $leVisiteur;
        include 'vues/v_selectVisiteur.php';
        $nomVis = (filter_input(INPUT_POST, 'lstVisiteur', FILTER_SANITIZE_STRING));
        trim($nomVis);
        $_SESSION['nomVisiteur'] = $nomVis;
        $idVisiteur = $pdo->getIdFromNomVisiteur($nomVis);
        $_SESSION['visiteur'] = $idVisiteur['id'];
        $infoFicheDeFrais = $pdo->getLesInfosFicheFrais($_SESSION['visiteur'], $_SESSION['date']);
        $infoFraisForfait = $pdo->getLesFraisForfait($_SESSION['visiteur'], $_SESSION['date']);
        $infoFraisHorsForfait = $pdo->getLesFraisHorsForfait($_SESSION['visiteur'], $_SESSION['date']);
        include 'vues/v_valideFrais.php';
        $_SESSION['montant'] = $montants;
        break;
    case 'CorrigerNbJustificatifs' :
        $lesMois = $pdo->getLesMois();
        $moisASelectionner = $_SESSION['date'];
        include 'vues/v_listeMoisComptable.php';
        $lesVisiteurs = $pdo->getVisiteursFromMois($_SESSION['date']);
        $selectedValue = $_SESSION['nomVisiteur'];
        include 'vues/v_selectVisiteur.php';
        $nbJustificatifs = filter_input(INPUT_POST, 'nbJust', FILTER_DEFAULT);
        if (estEntierPositif($nbJustificatifs)) {
            $pdo->majNbJustificatifs($_SESSION['visiteur'], $_SESSION['date'], $nbJustificatifs);
            ?>
            <script>alert("<?php echo htmlspecialchars('Votre fiche de frais a bien été corrigée ! ', ENT_QUOTES); ?>")</script>
            <?php
        } else {
            ajouterErreur('Les valeurs de frais doivent être numériques');
            include 'vues/v_erreurs.php';
        }
        $infoFicheDeFrais = $pdo->getLesInfosFicheFrais($_SESSION['visiteur'], $_SESSION['date']);
        $infoFraisForfait = $pdo->getLesFraisForfait($_SESSION['visiteur'], $_SESSION['date']);
        $infoFraisHorsForfait = $pdo->getLesFraisHorsForfait($_SESSION['visiteur'], $_SESSION['date']);
        include'vues/v_valideFrais.php';
        break;
    case 'CorrigerFraisForfait' :
        $lesMois = $pdo->getLesMois();
        $moisASelectionner = $_SESSION['date'];
        include 'vues/v_listeMoisComptable.php';
        $lesVisiteurs = $pdo->getVisiteursFromMois($_SESSION['date']);
        $selectedValue = $_SESSION['nomVisiteur'];
        include 'vues/v_selectVisiteur.php';
        $lesFrais = filter_input(INPUT_POST, 'lesFrais', FILTER_DEFAULT, FILTER_FORCE_ARRAY);
        if (lesQteFraisValides($lesFrais)) {
            $pdo->majFraisForfait($_SESSION['visiteur'], $_SESSION['date'], $lesFrais);
            ?>
            <script>alert("<?php echo htmlspecialchars('Votre fiche de frais a bien été corrigée ! ', ENT_QUOTES); ?>")</script>
            <?php
        } else {
            ajouterErreur('Les valeurs des frais doivent être numériques');
            include 'vues/v_erreurs.php';
        }
        $infoFicheDeFrais = $pdo->getLesInfosFicheFrais($_SESSION['visiteur'], $_SESSION['date']);
        $infoFraisForfait = $pdo->getLesFraisForfait($_SESSION['visiteur'], $_SESSION['date']);
        $infoFraisHorsForfait = $pdo->getLesFraisHorsForfait($_SESSION['visiteur'], $_SESSION['date']);
        include'vues/v_valideFrais.php';
        break;
    case 'CorrigerElemHorsForfait' :
        $lesMois = $pdo->getLesMois();
        $moisASelectionner = $_SESSION['date'];
        include 'vues/v_listeMoisComptable.php';
        $lesVisiteurs = $pdo->getVisiteursFromMois($_SESSION['date']);
        $selectedValue = $_SESSION['nomVisiteur'];
        include 'vues/v_selectVisiteur.php';
        $lesHorsForfaitDate = (filter_input(INPUT_POST, 'lesDates', FILTER_DEFAULT, FILTER_FORCE_ARRAY));
        $lesHorsForfaitLibelle = (filter_input(INPUT_POST, 'lesLibelles', FILTER_DEFAULT, FILTER_FORCE_ARRAY));
        $lesHorsForfaitMontant = (filter_input(INPUT_POST, 'lesMontants', FILTER_DEFAULT, FILTER_FORCE_ARRAY));
        foreach ($lesHorsForfaitDate as $uneDate) {
            dateAnglaisVersFrancais($uneDate);
            foreach ($lesHorsForfaitLibelle as $unLibelle) {
                foreach ($lesHorsForfaitMontant as $unMontant) {
                    if (estDateDepassee($uneDate) || ($unLibelle == '') || ($unMontant == '')) {
                        ajouterErreur('Une information est mauvaise. Rappel: date de moins de 1 ans, libelle et montant non null');
                        include 'vues/v_erreurs.php';
                        break 3;
                    } else {
                        $pdo->majFraisHorsForfait($_SESSION['visiteur'], $_SESSION['date'], $lesHorsForfaitLibelle, $lesHorsForfaitMontant, $lesHorsForfaitDate);
                        ?>
                        <script>alert("<?php echo htmlspecialchars('Votre fiche de frais a bien été corrigée ! ', ENT_QUOTES); ?>")</script>
                        <?php
                        break 3;
                    }
                }
            }
        }
        $infoFicheDeFrais = $pdo->getLesInfosFicheFrais($_SESSION['visiteur'], $_SESSION['date']);
        $infoFraisForfait = $pdo->getLesFraisForfait($_SESSION['visiteur'], $_SESSION['date']);
        $infoFraisHorsForfait = $pdo->getLesFraisHorsForfait($_SESSION['visiteur'], $_SESSION['date']);
        include'vues/v_valideFrais.php';
        break;
    case 'supprimerFrais':
        $unIdFrais = filter_input(INPUT_GET, 'idFrais', FILTER_SANITIZE_NUMBER_INT);
        $ceMois = filter_input(INPUT_GET, 'mois', FILTER_SANITIZE_STRING);
        $idVisiteur = filter_input(INPUT_GET, 'idVisiteur', FILTER_SANITIZE_STRING);
        ?></br>
        <div class="alert alert-info" role="alert">
            <p><h4>Voulez vous modifier ou supprimer le frais?<br></h4>
            <a href="index.php?uc=valideFrais&action=supprimer&idFrais=<?php echo $unIdFrais ?>">Supprimer</a> 
            ou <a href="index.php?uc=valideFrais&action=reporter&idFrais=<?php echo $unIdFrais ?>&mois=<?php echo $ceMois ?>&id=<?php echo $idVisiteur ?>">Reporter</a></p>
        </div>
        <?php
        break;
    case 'supprimer':
        $idFrais = filter_input(INPUT_GET, 'idFrais', FILTER_SANITIZE_NUMBER_INT);
        $pdo->refuserFraisHorsForfait($idFrais);
        ?>
        <div class="alert alert-info" role="alert">
            <p>Ce frais hors forfait a bien été supprimé! <a href = "index.php?uc=valideFrais&action=selectionnerMois">Cliquez ici</a>
                pour revenir à la selection.</p>
        </div>
        <?php
        break;
    case 'reporter':
        $idFrais = filter_input(INPUT_GET, 'idFrais', FILTER_SANITIZE_NUMBER_INT);
        $mois = filter_input(INPUT_GET, 'mois', FILTER_SANITIZE_STRING);
        $moisSuivant = $pdo->getMoisSuivant($mois);
        $idVisiteur = filter_input(INPUT_GET, 'id', FILTER_SANITIZE_STRING);
        if ($pdo->estPremierFraisMois($idVisiteur, $moisSuivant)) {
            $pdo->creeNouvellesLignesFrais($idVisiteur, $moisSuivant);
        }
        $moisAReporter = $pdo->reporterFraisHorsForfait($idFrais, $mois);
        ?>
        <div class="alert alert-info" role="alert">
            <p>Ce frais hors forfait a bien été reporté au mois suivant! <a href = "index.php?uc=valideFrais&action=selectionnerMois">Cliquez ici</a>
                pour revenir à la selection.</p>
        </div>
        <?php
        break;
    case 'Valider' :
        $pdo->validerFicheDeFrais($_SESSION['visiteur'], $_SESSION['date'], $_SESSION['montant']);
        ?> </br>
        <div class = "alert alert-success" role = "alert">
            <p>Votre fiche de frais a bien été validée ! <a href = "index.php?uc=valideFrais&action=selectionnerMois">Cliquez ici</a>
                pour revenir à la selection.</p>
        </div>
        <?php
}";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";